name: Just for testing
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  set-env:
    runs-on: ubuntu-latest
    outputs:
      DEPLOY_ENV: $"{{ steps.env_check.outputs.DEPLOY_ENV }}"

    steps:
      - name: Set default env
        run: echo "ENV=default" >> $GITHUB_ENV

      - name: Check if on-demand
        if: ${{ (github.event_name == 'workflow_dispatch') }}
        run: echo "ENV=test" >> $GITHUB_ENV

      - id: env_check
        env:
          OUT: "hei"
        run: echo "::set-output name=DEPLOY_ENV::$OUT"

  kladd:
    needs: set-env
    runs-on: ubuntu-latest

    steps:
      - name: Print Environment
        env:
          ENVIRON: ${{ needs.set-env.outputs.DEPLOY_ENV }}
        run: echo "Environment set to $ENVIRON"





  job1:
    # If ref is not a tag, set 'test'
    if: ${{ startsWith(github.ref, 'refs/heads/') }}
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.set-version.outputs.TAG }}

    steps:
      - id: set-version
        env:
          TAG: "${{github.sha}}"
        run: echo "::set-output name=TAG::$TAG"

  deploy:
    needs: job1
    runs-on: ubuntu-latest

    steps:
      - name: Print something
        run: echo "This is the CD workflow."

      - name: Print tag
        env:
          VERSION: ${{ needs.job1.outputs.VERSION }}
        run: echo "Version set to $VERSION"

      - name: Check reference
        env:
          REF: "${{github.ref}}"
        run: echo "Ref is $REF"

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"