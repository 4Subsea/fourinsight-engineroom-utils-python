name: Just for testing
on:
  release:
    types: [published]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build sphinx pydata_sphinx_theme

      - name: Get new version number from tag
        run: |
          ref="refs/tags/v2.2.2-test"
          prefix="refs/tags/v"
          suffix="-test"
          version=${ref#$prefix}
          version=${version%$suffix}
          echo "VERSION_NUMBER=$version" >> $GITHUB_ENV

      - name: Replace package version number
        run: |
          filename="./fourinsight/engineroom/utils/__init__.py"
          search_pattern="__version__[\s]*=[\s]*\"0.0.1\""
          replacement_text="__version__ = \"$VERSION_NUMBER\""
          sed -i "s|$search_pattern|$replacement_text|" "$filename"

      - name: Read __init__
        run: |
          input="fourinsight/engineroom/utils/__init__.py"
          while IFS= read -r line
          do
            echo "$line"
          done < "$input"

      - name: Build package
        run: python -m build --sdist --wheel --outdir ./dist

      - name: Build documentation
        run: sphinx-build -b html ./docs ./build/html

      - name: Publish package to TestPyPi
        if: ${{ startswith(github.ref, 'refs/tags/v') && endsWith(github.ref, '-test') }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_KEY }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish package to PyPi
        if: ${{ startswith(github.ref, 'refs/tags/v') && !endsWith(github.ref, '-test') }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_PROD_API_KEY }}

      - name: Delete 'latest' folder
        uses: azure/CLI@v1
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.FOURINSIGHTQA_DOC_BLOB_CONNSTR }}
        with:
          inlineScript: az storage blob delete-batch -s "\$web" --pattern "engineroom-utils/python/docs/latest/*"

      - name: Upload documentation to blob storage
        uses: azure/CLI@v1
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.FOURINSIGHTQA_DOC_BLOB_CONNSTR }}
        with:
          inlineScript: |
            az storage blob upload-batch -d "\$web" -s ./build/html --destination-path "engineroom-utils/python/docs/latest"
            az storage blob upload-batch -d "\$web" -s ./build/html --destination-path "engineroom-utils/python/docs/v$VERSION_NUMBER"

      # - name: (on-demand) Publish package to TestPyPi
      #   if: ${{ startsWith(github.ref, 'refs/heads') }}
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     user: __token__
      #     password: ${{ secrets.PYPI_TEST_API_KEY }}
      #     repository_url: https://test.pypi.org/legacy/

      # - name: Azure CLI script file
      #   uses: azure/CLI@v1
      #   with:
      #     inlineScript: |
      #       chmod +x $GITHUB_WORKSPACE/.deploy/upload_doc_to_azure.sh
      #       $GITHUB_WORKSPACE/.deploy/upload_doc_to_azure.sh

      # - name: Azure Login
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.FOURINSIGHTQA_DOC_BLOB_CONNSTR }}

      # - name: Read __init__
      #   run: |
      #     input="fourinsight/engineroom/utils/__init__.py"
      #     while IFS= read -r line
      #     do
      #       echo "$line"
      #     done < "$input"

      # - name: Print Hello
      #   run: echo "Hello, World"
